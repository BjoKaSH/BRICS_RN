/*!

@page examples Examples

This page summarizes examples on how to use the BRICS_RN library.  By contrast to 
for example the BRICS_3D library, which can be used stand-alone, we need a target
robot platform to demonstrate robot navigation.  This examples will use the youBot
platform as an example of an omnidirectional mobile base.  All examples below have
been tested with a simulated youBot and are expected to work unmodified on real hardware.

To simplify installation and setup, we will use a preconfigured ROS image available 
from http://nootrix.com/downloads/ (linked from http://www.ros.org/wiki/fuerte/Installation) 
as our foundation.  Please make sure you pick the ROS fuerte virtual machine image 
since this examples have only been tested against fuerte.  See section ROS installation 
for BRICS_RN demos on how setup your environment.

The following examples are available:

- @ref examples
 - @ref examples_install
 - @ref examples_skeleton (no BRICS_RN)
 - @ref examples_simple_goal (no BRICS_RN)


@section demo_example Demo application

Running the example system, which consists of two ROS nodes @c TrajctoryFollowerNode
and @c TrajectoryAdapterNode (which for simplicity here includes the planner),
follows the usual ROS procedure.  First one has to start the
@c roscore, then run the simulator or the real robot, before one can start the
actual navigation system.  Finally one needs to start some component which can
send navigation goals to the navigation system.  The BRICS_RN library comes with
the necessary tools bundled in the @c examples folder.  This folder contains:

 - The brics_rn_demo_common package.  <br/> This package holds launch files to
 bring up a simulated youBot and the example navigation nodes.  It also has a
 simple GUI client to send navigation goals to the navigation system.
 - The Stage simulator under amr/amr_stage <br /> This is an enhanced version
 of the standard Stage-4.1 simulator from the ros stage package.
 - Multiple worlds for Stage under amr/amr_stage_worlds <br /> These are various
 world definitions for Stage.  By default, the "apartment" world is used, which
 is appropriate for a navigation / exploration test.

To run the example ROS nodes, using the Stage simulator and a simulated youBot,
execute the following in sequence:
 # Execute @c rosmake @c brics_rn_demo_common, if not done before.  This builds 
 the GUI client and the Stage simulator and it dependencies. 
 # Second, start the simulator: @c roslaunch @c brics_rn_demo_common @c pathfollower_stage.launch
 # Wait for Stage to fully load and initialize.  Then run in a new terminal tab
 or window: @c rosservice @c call @c switch_ranger @c scan_front lc true.  This
 enables the front laser scanner of the simulated youBot.  The laser scanner must
 be enabled before starting the navigation system, because the planner and trajectory
 adapter check if the front laser scanner is present and throw an error if not.
 # Start the actual navigation system: @c roslaunch @c navigation_trajectory_follower
 @c trajectory_follower.launch and @c roslaunch @c navigation_trajectory_planner
 @c trajectory_planner.launch}.
 # Start the GUI to enter navigation goals: @c rosrun @c brics_rn_demo_common
 @c pub_goal_gui.py.

After entering goal coordinates in the GUI window and pressing "Send", the robot
should start moving in the Stage window.  The inner working of the system can be
monitored by for example listening on the topics between the planner and the
follower, e.g. running \@c rostopic @c echo @c path. Other interesting topics
instead of "path" include the @c simplifiedPath topic and the @c cmd_vel topic.

*/
